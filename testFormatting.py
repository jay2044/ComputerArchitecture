
import os
import sys

current_dir = os.path.dirname(__file__)
sys.path.append(os.path.join(current_dir, '../'))
from binaryArith.binaryArith import *

multiplication_tests_single_negative = [
[["1000", "0001"], ["0000", "10000000", "00001000"]], # -8 * 1
[["1001", "0001"], ["0000", "10010000", "00001001"]], # -7 * 1
[["1010", "0001"], ["0000", "10100000", "00001010"]], # -6 * 1
[["1011", "0001"], ["0000", "10110000", "00001011"]], # -5 * 1
[["1100", "0001"], ["0000", "11000000", "00001100"]], # -4 * 1
[["1101", "0001"], ["0000", "11010000", "00001101"]], # -3 * 1
[["1110", "0001"], ["0000", "11100000", "00001110"]], # -2 * 1
[["1111", "0001"], ["0000", "11110000", "00001111"]], # -1 * 1
[["1000", "0010"], ["0000", "10000000", "00010000"]], # -8 * 2
[["1001", "0010"], ["0000", "10010000", "00010010"]], # -7 * 2
[["1010", "0010"], ["0000", "10100000", "00010100"]], # -6 * 2
[["1011", "0010"], ["0000", "10110000", "00010110"]], # -5 * 2
[["1100", "0010"], ["0000", "11000000", "00011000"]], # -4 * 2
[["1101", "0010"], ["0000", "11010000", "00011010"]], # -3 * 2
[["1110", "0010"], ["0000", "11100000", "00011100"]], # -2 * 2
[["1111", "0010"], ["0000", "11110000", "00011110"]], # -1 * 2
[["1000", "0011"], ["0000", "10000000", "00011000"]], # -8 * 3
[["1001", "0011"], ["0000", "10010000", "00011011"]], # -7 * 3
[["1010", "0011"], ["0000", "10100000", "00011110"]], # 10 * 3
[["1011", "0011"], ["0000", "10110000", "00100001"]], # 11 * 3
[["1100", "0011"], ["0000", "11000000", "00100100"]], # 12 * 3
[["1101", "0011"], ["0000", "11010000", "00100111"]], # 13 * 3
[["1110", "0011"], ["0000", "11100000", "00101010"]], # 14 * 3
[["1111", "0011"], ["0000", "11110000", "00101101"]], # 15 * 3
[["1000", "0100"], ["0000", "10000000", "00100000"]], # 8 * 4
[["1001", "0100"], ["0000", "10010000", "00100100"]], # 9 * 4
[["1010", "0100"], ["0000", "10100000", "00101000"]], # 10 * 4
[["1011", "0100"], ["0000", "10110000", "00101100"]], # 11 * 4
[["1100", "0100"], ["0000", "11000000", "00110000"]], # 12 * 4
[["1101", "0100"], ["0000", "11010000", "00110100"]], # 13 * 4
[["1110", "0100"], ["0000", "11100000", "00111000"]], # 14 * 4
[["1111", "0100"], ["0000", "11110000", "00111100"]], # 15 * 4
[["1000", "0101"], ["0000", "10000000", "00101000"]], # 8 * 5
[["1001", "0101"], ["0000", "10010000", "00101101"]], # 9 * 5
[["1010", "0101"], ["0000", "10100000", "00110010"]], # 10 * 5
[["1011", "0101"], ["0000", "10110000", "00110111"]], # 11 * 5
[["1100", "0101"], ["0000", "11000000", "00111100"]], # 12 * 5
[["1101", "0101"], ["0000", "11010000", "01000001"]], # 13 * 5
[["1110", "0101"], ["0000", "11100000", "01000110"]], # 14 * 5
[["1111", "0101"], ["0000", "11110000", "01001011"]], # 15 * 5
[["1000", "0110"], ["0000", "10000000", "00110000"]], # 8 * 6
[["1001", "0110"], ["0000", "10010000", "00110110"]], # 9 * 6
[["1010", "0110"], ["0000", "10100000", "00111100"]], # 10 * 6
[["1011", "0110"], ["0000", "10110000", "01000010"]], # 11 * 6
[["1100", "0110"], ["0000", "11000000", "01001000"]], # 12 * 6
[["1101", "0110"], ["0000", "11010000", "01001110"]], # 13 * 6
[["1110", "0110"], ["0000", "11100000", "01010100"]], # 14 * 6
[["1111", "0110"], ["0000", "11110000", "01011010"]], # 15 * 6
[["0111", "0111"], ["0000", "01110000", "00110001"]], # 7 * 7
[["1000", "0111"], ["0000", "10000000", "00111000"]], # 8 * 7
[["1001", "0111"], ["0000", "10010000", "00111111"]], # 9 * 7
[["1010", "0111"], ["0000", "10100000", "01000110"]], # 10 * 7
[["1011", "0111"], ["0000", "10110000", "01001101"]], # 11 * 7
[["1100", "0111"], ["0000", "11000000", "01010100"]], # 12 * 7
[["1101", "0111"], ["0000", "11010000", "01011011"]], # 13 * 7
[["1110", "0111"], ["0000", "11100000", "01100010"]], # 14 * 7
[["1111", "0111"], ["0000", "11110000", "01101001"]], # 15 * 7
[["0001", "1000"], ["0000", "00010000", "00001000"]], # 1 * 8
[["0010", "1000"], ["0000", "00100000", "00010000"]], # 2 * 8
[["0011", "1000"], ["0000", "00110000", "00011000"]], # 3 * 8
[["0100", "1000"], ["0000", "01000000", "00100000"]], # 4 * 8
[["0101", "1000"], ["0000", "01010000", "00101000"]], # 5 * 8
[["0110", "1000"], ["0000", "01100000", "00110000"]], # 6 * 8
[["0111", "1000"], ["0000", "01110000", "00111000"]], # 7 * 8
[["0001", "1001"], ["0000", "00010000", "00001001"]], # 1 * 9
[["0010", "1001"], ["0000", "00100000", "00010010"]], # 2 * 9
[["0011", "1001"], ["0000", "00110000", "00011011"]], # 3 * 9
[["0100", "1001"], ["0000", "01000000", "00100100"]], # 4 * 9
[["0101", "1001"], ["0000", "01010000", "00101101"]], # 5 * 9
[["0110", "1001"], ["0000", "01100000", "00110110"]], # 6 * 9
[["0111", "1001"], ["0000", "01110000", "00111111"]], # 7 * 9
[["0001", "1010"], ["0000", "00010000", "00001010"]], # 1 * 10
[["0010", "1010"], ["0000", "00100000", "00010100"]], # 2 * 10
[["0011", "1010"], ["0000", "00110000", "00011110"]], # 3 * 10
[["0100", "1010"], ["0000", "01000000", "00101000"]], # 4 * 10
[["0101", "1010"], ["0000", "01010000", "00110010"]], # 5 * 10
[["0110", "1010"], ["0000", "01100000", "00111100"]], # 6 * 10
[["0111", "1010"], ["0000", "01110000", "01000110"]], # 7 * 10
[["0001", "1011"], ["0000", "00010000", "00001011"]], # 1 * 11
[["0010", "1011"], ["0000", "00100000", "00010110"]], # 2 * 11
[["0011", "1011"], ["0000", "00110000", "00100001"]], # 3 * 11
[["0100", "1011"], ["0000", "01000000", "00101100"]], # 4 * 11
[["0101", "1011"], ["0000", "01010000", "00110111"]], # 5 * 11
[["0110", "1011"], ["0000", "01100000", "01000010"]], # 6 * 11
[["0111", "1011"], ["0000", "01110000", "01001101"]], # 7 * 11
[["0001", "1100"], ["0000", "00010000", "00001100"]], # 1 * 12
[["0010", "1100"], ["0000", "00100000", "00011000"]], # 2 * 12
[["0011", "1100"], ["0000", "00110000", "00100100"]], # 3 * 12
[["0100", "1100"], ["0000", "01000000", "00110000"]], # 4 * 12
[["0101", "1100"], ["0000", "01010000", "00111100"]], # 5 * 12
[["0110", "1100"], ["0000", "01100000", "01001000"]], # 6 * 12
[["0111", "1100"], ["0000", "01110000", "01010100"]], # 7 * 12
[["0001", "1101"], ["0000", "00010000", "00001101"]], # 1 * 13
[["0010", "1101"], ["0000", "00100000", "00011010"]], # 2 * 13
[["0011", "1101"], ["0000", "00110000", "00100111"]], # 3 * 13
[["0100", "1101"], ["0000", "01000000", "00110100"]], # 4 * 13
[["0101", "1101"], ["0000", "01010000", "01000001"]], # 5 * 13
[["0110", "1101"], ["0000", "01100000", "01001110"]], # 6 * 13
[["0111", "1101"], ["0000", "01110000", "01011011"]], # 7 * 13
[["0001", "1110"], ["0000", "00010000", "00001110"]], # 1 * 14
[["0010", "1110"], ["0000", "00100000", "00011100"]], # 2 * 14
[["0011", "1110"], ["0000", "00110000", "00101010"]], # 3 * 14
[["0100", "1110"], ["0000", "01000000", "00111000"]], # 4 * 14
[["0101", "1110"], ["0000", "01010000", "01000110"]], # 5 * 14
[["0110", "1110"], ["0000", "01100000", "01010100"]], # 6 * 14
[["0111", "1110"], ["0000", "01110000", "01100010"]], # 7 * 14
[["0001", "1111"], ["0000", "00010000", "00001111"]], # 1 * 15
[["0010", "1111"], ["0000", "00100000", "00011110"]], # 2 * 15
[["0011", "1111"], ["0000", "00110000", "00101101"]], # 3 * 15
[["0100", "1111"], ["0000", "01000000", "00111100"]], # 4 * 15
[["0101", "1111"], ["0000", "01010000", "01001011"]], # 5 * 15
[["0110", "1111"], ["0000", "01100000", "01011010"]], # 6 * 15
[["0111", "1111"], ["0000", "01110000", "01101001"]], # 7 * 15
]


def testFormatting(list):
    for row in list:
        row[1].append(twosComp(row[1][2], len(row[1][2])))
        print(row)

testFormatting(multiplication_tests_single_negative)